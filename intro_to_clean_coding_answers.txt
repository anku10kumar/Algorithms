1. In your own words, explain what clean code is and why it is important.
A: Clean code is code that other developers can easily read, understand, and add to. If you write clean code, then you are helping your future self and your co-workers. It reduces the cost of maintenance of the application you are writing and makes it easier to estimate the time needed for new features.  


2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.
A: 
Nowadays, cars come with a lot of built in automation. With bad software, the car could cause crashes. 

3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

A: This is not clean code due to the following reasons: 
* This piece of code has too many comments. 
* The variables are not named appropriately. 
* The code block is not nested correctly.
* It does not follow the single responsibility principle. 

Refactored code: 

FUNCTION cToF(celsius)
  SET faren TO celsius * 1.8000 + 32; 
  PRINT faren; 
END FUNCTION

FUNCTION fToC(fahrenheit)
  SET cels TO (fahrenheit - 32) * (5/9); 
  PRINT cels; 
END FUNCTION

4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

A: The code is not clean as it's not nested correctly. The refactored code is as follows: 

FUNCTION calcPercent(sum,total)
  IF (total !=0)
     SET percentage TO (sum/total)*100
     PRINT percentage
  ELSE 
     PRINT ("Sorry, cannot divide by 0")
  END IF
END FUNCTION

5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

a. The following function prints the subtotal of a customer's transaction and receives payment accordingly.

FUNCTION checkOutCustomer(cash, subTotal, discountRate, tax)
   SET grandTotal TO (subTotal-(subTotal*discountRate/100))+ (subTotal*tax/100);
   IF CASH NOT 0 THEN 
       PRINT "Change due: " + (cash - grandTotal)
   ELSE IF 
       PRINT "Your credit card has been charged: " + grandTotal
   END IF
END FUNCTION

b. The following function checks out a book if there are no issues with the guest's account.

FUNCTION checkoutBook(book, guest)
 IF guest.accountActive AND IF guest.outstandingFees = 0 
      THEN
           APPEND book to guest.books
           SET book.status to "Checked Out"
           PRINT "Your books have been issued."

  ELSE (guest.hasOverdueBooks) 
     THEN
        PRINT "Unable to check out book."

  END IF
     
END FUNCTION


C. The following class is a code snippet that should support the transactions a customer can perform at an ATM.

CLASS BankAccount

 FUNCTION displayBalance
    PRINT balance
 END FUNCTION

 FUNCTION deposit(amount)
    SET balance to balance + amount
 END FUNCTION

 FUNCTION withdraw(amount)
     IF balance > amount THEN
       SET balance to balance - amount
     END IF
 END FUNCTION

 FUNCTION creditCardOffer
     IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard WITH creditCardOffer
     END IF
 END FUNCTION

 FUNCTION checkStatus
     IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount WITH checkStatus
     END IF
 END FUNCTION

 ....
 ....
 ....

END


Programming Questions
You may do the following problems in any language of your choice. Use the clean code principles taught in this section while writing the code.

6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

function perfectSq(arr){
  let res = 0;
  for (let i = 0; i<arr.length ; i++)
  res += arr[i]
  return res;
  
  let n= Math.sqrt(res)
  if( res % n === 0){
    console.log(n)  }
    else (console.log(res))
  }
  perfectSq([10,1,4,6,1,1,2])

7. 7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

  function duplicate(arr, el){
    
    for (let i = 0; i<arr.length ; i++ ){
      if (arr[i] === el){
        return true;
      }
    }
    return false
  }


